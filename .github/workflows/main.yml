name: Tests_and_Deploy

on:
  push:
    branches:
      - main

env:
  CONTAINER_NAME: "spotify_notifications_bot"

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  push_to_ghcr:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checking out the repository
        uses: actions/checkout@v4

      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v3

      - name: Logging into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - id: lower-repo
        run: echo "repository=$(echo ${GITHUB_REPOSITORY,,})" >> $GITHUB_ENV

      - name: Pushing Image to Github Container Registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/${{ env.repository }}:latest

  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    needs: push_to_ghcr

    steps:
      - id: lower-repo
        run: echo "repository=$(echo ${GITHUB_REPOSITORY,,})" >> $GITHUB_ENV

      - uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: CONTAINER_NAME
          script: |
            # Stop current Docker container
            docker stop $(echo $CONTAINER_NAME)

            # Free up space
            docker rm $(echo $CONTAINER_NAME)

            # Delete old image
            docker rmi ghcr.io/${{ env.repository }}:latest

            # Login to Github Container Registry
            docker login https://ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.ACCESS_TOKEN }}

            # Pull the Docker Image 
            docker pull ghcr.io/${{ env.repository }}:latest

            # Run a new container from a new image
            docker run -d \
            -v spotify_notifications_bot:/var/lib/spotify_notifications_bot \
            -e TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} \
            -e SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }} \
            -e SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }} \
            -e TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_ADMIN_CHAT_ID }} \
            --restart on-failure:5 \
            --publish 8888:8888 \
            --name $(echo $CONTAINER_NAME) \
            ghcr.io/${{ env.repository }}:latest

            # Sleep for a few seconds to allow the container to start
            sleep 10

            # Check if the container is running by name
            if docker ps -q -f name=$(echo $CONTAINER_NAME) | grep -q .; then
              echo "Container is running."
            else
              echo "Container is not running. Workflow failed."
              exit 1
            fi